metricbeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.period: 10s
  reload.enabled: false

  #setup.template:
  #name: "matricbeat-container"
  #pattern: "metricbeat-container-%{[agent.version]}-%{+yyyy.MM.dd}"
  #enabled: true

setup.template.settings:
  index:
    number_of_shards: 3
    codec: best_compression
    #number_of_routing_shards: 30
    #_source:
    #enabled: false

metricbeat.max_start_delay: 10s
#metricbeat.autodiscover:
        #providers:
          #- type: docker
      #templates:
              #- condition:
                #equals.docker.container.image: etcd
          #config:
                  #- module: etcd
              #metricsets: ["leader", "self", "store"]
              #period: 10s
              #hosts: ["${host}:2379"]

processors:
  - add_host_metadata: ~
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~

#==========================  Modules configuration =============================
#-------------------------------- System Module --------------------------------
metricbeat.modules:
- module: system
  metricsets:
    - cpu             # CPU usage
    - load            # CPU load averages
    - memory          # Memory usage
    - network         # Network IO
    - process         # Per process metrics
    - process_summary # Process summary
    - uptime          # System Uptime
    - socket_summary  # Socket summary
    - core           # Per CPU core usage
    - diskio         # Disk IO
    - filesystem     # File system usage for each mountpoint
    - fsstat         # File system summary metrics
    #- raid           # Raid
    - socket         # Sockets and connection info (linux only)
  enabled: true
  period: 10s
  processes: ['.*']

  cpu.metrics:  ["percentages"]  # The other available options are normalized_percentages and ticks.
  core.metrics: ["percentages"]  # The other available option is ticks.

  process.include_top_n:
    enabled: true
    by_cpu: 20
    by_memory: 20

#---------------------------- Elasticsearch Module ----------------------------
metricbeat.modules:
- module: elasticsearch
  metricsets:
    - node
    - node_stats
    - index
    - index_recovery
    - index_summary
    - shard
    #- ml_job
  period: 10s
  hosts: ["http://172.18.0.2:9200", "http://172.18.0.3:9200", "http://172.18.0.4:9200"]
  #xpack.enabled: true
# username: "elastic"
# password: "changeme"
# ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
# index_recovery.active_only: true

#--------------------------------- Beat Module ---------------------------------
- module: beat
  metricsets:
    - stats
    - state
  period: 10s
  hosts: ["http://127.0.0.1:5066"]

- module: beat
  metricsets:
    - stats
    - state
  period: 10s
  hosts: ["http://127.0.0.1:5067"]

#ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
#xpack.enabled: false

#-------------------------------- Kibana Module --------------------------------
- module: kibana
  metricsets: ["status"]
  period: 10s
  hosts: ["172.18.0.9:5601"]
  basepath: ""
  enabled: true
  #xpack.enabled: true

#------------------------------- Logstash Module -------------------------------
- module: logstash
  metricsets: ["node", "node_stats"]
  enabled: true
  period: 10s
  hosts: ["172.18.0.10:9600"]

#-------------------------------- Redis Module --------------------------------
- module: redis
  metricsets: ["info", "keyspace"]
  enabled: true
  period: 10s
  hosts: ["172.18.0.12:6379"]
  timeout: 1s
  #fields:
  #datacenter: west
  #network: tcp
  #maxconn: 10
  #  processors:
  #    - include_fields:
  #    - fields: ["beat", "metricset", "redis.info.stats"]
  password: Y&hZ&lgooHaW

#-------------------------------- Docker Module --------------------------------
- module: docker
  metricsets:
    - "container"
    - "cpu"
    - "diskio"
    - "event"
    - "healthcheck"
    - "info"
    #- "image"
    - "memory"
    - "network"
  hosts: ["unix:///var/run/docker.sock"]
  period: 10s
  enabled: true
  #labels.dedot: false
  #cpu.cores: true
  #ssl:
    #certificate_authority: "/etc/pki/root/ca.pem"
    #certificate:           "/etc/pki/client/cert.pem"
    #key:                   "/etc/pki/client/cert.key"

#================================ Outputs ======================================
#-------------------------- REDIS output ------------------------------
output.redis:
  hosts: ["172.18.0.12:6379"]
  password: Y&hZ&lgooHaW
  key: "metricbeat"
  db: 0
  timeout: 5

name: LOG-MONITORING
#================================ Logging ======================================
logging.level: info
#logging.selectors: [ ]
#logging.to_stderr: false
#logging.to_syslog: false
#logging.to_eventlog: false
#logging.metrics.enabled: true
#logging.metrics.period: 30s
logging.to_files: true
logging.files:
  path: /usr/share/metricbeat/logs
  name: metricbeat
  #rotateeverybytes: 10485760 # = 10MB
  keepfiles: 5
  permissions: 0644
  #interval: 0
logging.json: true
#monitoring.enabled: true

#================================ HTTP Endpoint ======================================
http.enabled: true
http.host: localhost
http.port: 5066
#http.named_pipe.user:
#http.named_pipe.security_descriptor:
